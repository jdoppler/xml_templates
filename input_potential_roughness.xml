<?xml version="1.0"?>
<object type="Parameters" name="Eingabe">

    <!-- global simulation name -->
    <param name="file"> complex_potential </param>

    <object type="Parameters" name="settings">
        <param name="modes"> modes </param>
        <param name="points_per_halfwave"> pphw </param>

        <param name="W"> 1.0 </param>
        <param name="L"> L </param>
        <param name="lead_width"> $W </param>

        <param name="kF"> $modes*$pi/$lead_width </param>
        <param name="lead_length"> $W </param>
        <param name="nyout"> $points_per_halfwave*$modes </param>
        <param name="dx"> $W/($nyout+1) </param>
        <param name="dy"> $dx </param>
        <param name="pi"> 3.1415928 </param>
        <param name="r_ny"> $W/$dx </param>
        <param name="r_nx"> $L/$dx </param>

        <!-- real/imaginary potential -->
        <param name="Kappa0"> 0.0 </param>
        <param name="Gamma0"> Gamma0 </param>

        <!-- potential vectors -->
        <param name="N_file_potential"> N_file_potential </param>
        <param name="potential_real"> potential_real </param>
        <param name="potential_imag"> potential_imag </param>

        <!-- boundary vectors -->
        <param name="N_file_boundary"> N_file_boundary </param>
        <param name="boundary_upper"> boundary_upper </param>
        <param name="boundary_lower"> boundary_lower </param>

        <!-- parallelize Dyson scheme -->
        <param name="do_single_slices"> 2 </param>
        <!-- parallelize wavefunction plots -->
        <param name="do_picture_slices"> 1 </param>
    </object>

    <!-- wavefunction image -->
    <object type="Image" name="image">
        <param name="write_potential"> 1 </param>
        <param name="write_geometry"> 1 </param>
        <param name="zoom"> 1 </param>
        <param name="prepend_zero"> 0 </param>
        <object type="jpg_image" name="processor_0">
            <object type="default_palette" name="palette">
                <import> settings </import>
                <param name="scale"> $L/($dx*$dy) </param>
            </object>
        </object>
    </object>

    <!-- cavity -->
    <object type="Block" name="geometry">
        <object type="Tight_Binding" name="H">
            <import> settings </import>
            <param name="ny"> $r_ny </param>
            <param name="neumann"> neumann </param>
        </object>

        <!-- border hamiltonian -->
        <object type="Border_Hamiltonian" name="H_cut">
            <param name="neumann"> neumann </param>

            <!-- upper boundary -->
            <object type="modify_vector" name="upper">
                <object type="input_vector" name="data">
                    <import> settings </import>
                    <param name="N"> $N_file_profile </param>
                    <param name="file"> #boundary_upper </param>
                    <param name="format"> %*lf %lf </param>
                </object>
                <import>settings</import>
                <param name="output"> upper.dat </param>
                <param name="f(x)"> (x-$W)/$dx </param>
                <param name="i(x)"> x*$N_file_profile/$r_nx </param>
            </object>

            <!-- lower boundary -->
            <object type="modify_vector" name="lower">
                <object type="input_vector" name="data">
                    <import> settings </import>
                    <param name="N"> $N_file_profile </param>
                    <param name="file"> #boundary_lower </param>
                    <param name="format"> %*lf %lf </param>
                </object>
                <import> settings </import>
                <param name="output"> lower.dat </param>
                <param name="f(x)"> -x/$dx </param>
                <param name="i(x)"> x*$N_file_profile/$r_nx </param>
            </object>
            <insert name="sub_H"> H </insert>
        </object>

        <!-- complex potential -->
        <object type="xy_function2d_Potential" name="Absorber">

            <object type="complex_vector_step_function2d" name="function">

                <!-- real part -->
                <!-- <object type="modify_vector" name="vector"> -->
                <!--     <object type="input_vector" name="data"> -->
                <!--         <import> settings </import> -->
                <!--         <param name="file"> #potential_real </param> -->
                <!--         <param name="N"> $N_file_potential </param> -->
                <!--         <param name="format"> %*lf %lf </param> -->
                <!--     </object> -->
                <!--     <import> settings </import> -->
                <!--     <param name="f(x)"> 0.0*x </param> -->
                <!--     <param name="i(x)"> x/$r_nx/$r_ny*$N_file_potential </param> -->
                <!-- </object> -->

                <object type="const_vector" name="vector">
                    <import> settings </import>
                    <param name="nx"> $r_nx </param>
                    <param name="ny"> $r_ny </param>
                    <param name="potential"> $Kappa0 </param>
                    <param name="border_width"> 0.0 </param>
                    <param name="border_pot"> 0.0 </param>
                </object>

                <!-- imaginary part -->
                <object type="modify_vector" name="vector_imag">
                    <object type="input_vector" name="data">
                        <import> settings </import>
                        <param name="file"> #imag_potential </param>
                        <param name="N"> $N_file_potential </param>
                        <param name="format"> %*lf %lf </param>
                    </object>
                    <import> settings </import>
                    <param name="f(x)"> 1.*x </param>
                    <param name="i(x)"> x/$r_nx/$r_ny*$N_file_potential </param>
                </object>

                <!-- <object type="const_vector" name="vector_imag"> -->
                <!--     <import> settings </import> -->
                <!--     <param name="nx"> $r_nx </param> -->
                <!--     <param name="ny"> $r_ny </param> -->
                <!--     <param name="potential"> $Gamma0 </param> -->
                <!--     <param name="border_width"> 0.0 </param> -->
                <!--     <param name="border_pot"> 0.0 </param> -->
                <!-- </object> -->

                <!-- take care that Wx, Wy correspond to L=r_nx*dx, W=r_ny*dy! -->
                <import> settings </import>
                <param name="Wx"> $L </param>
                <param name="Wy"> $W </param>
                <param name="ny"> $r_ny </param>
            </object>
        </object>

        <object type="ExtPot_Decorator" name="H_Absorber">
            <link name="sub_H"> H_cut </link>
            <link name="Potential"> Absorber </link>
        </object>

        <object type="Rectangle" name="rect_0">
            <import> settings </import>
            <param name="nx">$r_nx</param>
            <insert name="H">H_Absorber</insert>
        </object>
    </object>

    <object type="Streuproblem" name="job_0">
        <import> settings </import>
        <param name="EF"> $kF*$kF/2. </param>
        <param name="nx_lead"> $lead_length/$dx </param>

        <param name="imode_min"> 0 </param>
        <param name="imode_step"> 1 </param>
        <param name="imode_N"> floor($modes) </param>

        <param name="pics_min"> 0 </param>
        <param name="pics_step"> 1 </param>
        <param name="pics_N"> floor($modes) </param>

        <insert name="left_lead"> H </insert>
        <insert name="right_lead"> H </insert>

        <link name="geometry"> geometry </link>
        <link name="image"> image </link>

        <object type="Interface" name="left_interface">
            <param name="ist_L"> 0 </param>
            <param name="ist_R"> 0 </param>
            <insert name="HI"> H </insert>
        </object>

        <object type="Interface" name="right_interface">
            <param name="ist_L"> 0 </param>
            <param name="ist_R"> 0 </param>
            <insert name="HI"> H </insert>
        </object>

        <!-- write complex transmission/reflection coefficients -->
        <!-- <object type="Full_ascii" name="writer_0"/> -->
        <!-- write total transmission/reflection probabilities -->
        <object type="S_Total" name="writer_0"/>
        <!--- output full S-matrix -->
        <object type="streuproblem_post_printSmatrices" name="postprocessor"/>
    </object>

    <!-- plot potential -->
    <object type="Image" name="job_1">
        <link name="geometry">geometry</link>

        <param name="zoom">1.0</param>
        <param name="n_start">0</param>
        <param name="prepend_zero">1</param>

        <param name="write_geometry">0</param>
        <param name="write_potential">1</param>

        <!-- important to have meaningful plots! -->
        <param name="subtract_minimum">0</param>
        <param name="subtract_average">1</param>

        <object type="jpg_image" name="processor_0">
            <object type="complex_palette" name="palette">
                <import> settings </import>
                <param name="scale"> 10. </param>
                <param name="part"> 0 </param>
            </object>
            <param name="fname"> real </param>
        </object>
        <object type="jpg_image" name="processor_1">
            <object type="complex_palette" name="palette">
                <import> settings </import>
                <param name="scale"> 10. </param>
                <param name="part"> 1 </param>
            </object>
            <param name="fname"> imag </param>
        </object>

        <!-- write .ascii image with n_x, n_x, Re(V), Im(V) -->
        <!-- <object type="ascii_image" name="processor_2"> -->
        <!--     <param name="write_imag"> 1 </param> -->
        <!-- </object> -->
    </object>
</object>
